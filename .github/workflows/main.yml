# This is a basic workflow to help you get started with Actions

name: create_openapi_docs

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  push:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with: 
          fetch-depth: 0
      # Runs a single command using the runners shell
      - name: protobuf to openapi
        uses: Prom3th3us/protobuf2swagger@onceMore
        with:
          protobuf: './src/main/protobuf/com/example/counter_api.proto'
        id: random-color-generator
      - name: Save openapi.json
        run: echo "${{ steps.random-color-generator.outputs.openapi }}" > openapi.json
      - name: Read color
        run: |
            # cat openapi.json
            # setup the username and email. I tend to use 'GitHub Actions Bot' with no email by default
            git --version
            git config user.name "GitHub Actions Bot"
            git config user.email "<>"
            git status
            echo "Adding color.txt"
            git add openapi.json
            git stash 
            echo "Stashed"
            git branch
            git checkout gh-pages
            echo "Made checkout"
            git stash pop
            echo "Adding openapi.json"
            rm color.txt
            git add color.txt
            git commit -m "Update openapi.json"
            git push origin gh-pages
